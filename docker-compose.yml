
services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lead_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    restart: unless-stopped
    command: http n8n:5678
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    ports:
      - "4040:4040"
    networks:
      - lead_network
    depends_on:
      - postgres

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-password123}
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n123
      - GENERIC_TIMEZONE=Asia/Bangkok
      - NODE_FUNCTION_ALLOW_BUILTIN=*
      - NODE_FUNCTION_ALLOW_EXTERNAL=*
      - N8N_DISABLE_NGROK=true
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
      - ./n8n/credentials:/home/node/.n8n/credentials
      - ./wait-for-ngrok.mjs:/home/node/wait-for-ngrok.mjs
    depends_on:
      postgres:
        condition: service_healthy
      ngrok:
        condition: service_started
    networks:
      - lead_network
    entrypoint: ["node", "/home/node/wait-for-ngrok.mjs"]

  api:
    build: ./api
    container_name: api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=leads_db
      - DB_USER=leads_user
      - DB_PASSWORD=leads123
      - RUNNING_IN_DOCKER=true
      - N8N_WEBHOOK_URL=${N8N_WEBHOOK_URL:-http://n8n:5678/webhook}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WHATSAPP_SESSION_NAME=lead-bot
      - DISABLE_WHATSAPP=${DISABLE_WHATSAPP:-false}
    volumes:
      - ./api/sessions:/app/sessions
      - ./api/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - lead_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  n8n_data:

networks:
  lead_network:
    driver: bridge