-- WhatsApp Sales Automation Database Schema
-- –í–µ—Ä—Å–∏—è: 1.0
-- –î–∞—Ç–∞: 2025-06-06

-- ===============================================
-- –û–°–ù–û–í–ù–´–ï –¢–ê–ë–õ–ò–¶–´
-- ===============================================

-- –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–æ–≤
CREATE TABLE IF NOT EXISTS leads (
    id SERIAL PRIMARY KEY,
    lead_id INTEGER UNIQUE NOT NULL,
    name VARCHAR(255) NOT NULL,
    phone VARCHAR(20) UNIQUE NOT NULL,
    email VARCHAR(255),
    company_info TEXT,
    business_type VARCHAR(100),
    employees_count VARCHAR(50),
    has_crm VARCHAR(10),
    status VARCHAR(50) DEFAULT 'new',
    classification_status VARCHAR(50) DEFAULT 'pending',
    meeting_scheduled BOOLEAN DEFAULT FALSE,
    meeting_time TIMESTAMP,
    
    -- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
    company_size VARCHAR(50),
    estimated_budget VARCHAR(50),
    needs_description TEXT,
    urgency_level VARCHAR(20),
    
    -- –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –¢–∞–±–ª–∏—Ü–∞ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
CREATE TABLE IF NOT EXISTS chat_history (
    id SERIAL PRIMARY KEY,
    lead_id INTEGER REFERENCES leads(id) ON DELETE CASCADE,
    phone VARCHAR(20) NOT NULL,
    message_text TEXT NOT NULL,
    message_type VARCHAR(20) DEFAULT 'text',
    direction VARCHAR(10) NOT NULL CHECK (direction IN ('incoming', 'outgoing')),
    ai_agent VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –¢–∞–±–ª–∏—Ü–∞ –ª–æ–≥–æ–≤ AI –æ—Ç–≤–µ—Ç–æ–≤
CREATE TABLE IF NOT EXISTS ai_responses_log (
    id SERIAL PRIMARY KEY,
    lead_id INTEGER REFERENCES leads(id) ON DELETE CASCADE,
    phone VARCHAR(20) NOT NULL,
    input_message TEXT NOT NULL,
    ai_response TEXT NOT NULL,
    ai_agent VARCHAR(20) NOT NULL CHECK (ai_agent IN ('classifier', 'sales')),
    processing_time_ms INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –¢–∞–±–ª–∏—Ü–∞ –≤—Å—Ç—Ä–µ—á
CREATE TABLE IF NOT EXISTS meetings (
    id SERIAL PRIMARY KEY,
    lead_id INTEGER REFERENCES leads(id) ON DELETE CASCADE,
    google_calendar_event_id VARCHAR(255),
    meeting_time TIMESTAMP NOT NULL,
    duration_minutes INTEGER DEFAULT 60,
    status VARCHAR(20) DEFAULT 'scheduled' CHECK (status IN ('scheduled', 'completed', 'cancelled', 'rescheduled')),
    meeting_link VARCHAR(500),
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –¢–∞–±–ª–∏—Ü–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
CREATE TABLE IF NOT EXISTS system_settings (
    id SERIAL PRIMARY KEY,
    setting_key VARCHAR(100) UNIQUE NOT NULL,
    setting_value TEXT NOT NULL,
    description TEXT,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ===============================================
-- –ò–ù–î–ï–ö–°–´ –î–õ–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò
-- ===============================================

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã leads
CREATE INDEX IF NOT EXISTS idx_leads_phone ON leads(phone);
CREATE INDEX IF NOT EXISTS idx_leads_status ON leads(status);
CREATE INDEX IF NOT EXISTS idx_leads_classification_status ON leads(classification_status);
CREATE INDEX IF NOT EXISTS idx_leads_created_at ON leads(created_at);
CREATE INDEX IF NOT EXISTS idx_leads_meeting_scheduled ON leads(meeting_scheduled);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã chat_history
CREATE INDEX IF NOT EXISTS idx_chat_history_lead_id ON chat_history(lead_id);
CREATE INDEX IF NOT EXISTS idx_chat_history_phone ON chat_history(phone);
CREATE INDEX IF NOT EXISTS idx_chat_history_created_at ON chat_history(created_at);
CREATE INDEX IF NOT EXISTS idx_chat_history_direction ON chat_history(direction);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã ai_responses_log
CREATE INDEX IF NOT EXISTS idx_ai_responses_lead_id ON ai_responses_log(lead_id);
CREATE INDEX IF NOT EXISTS idx_ai_responses_phone ON ai_responses_log(phone);
CREATE INDEX IF NOT EXISTS idx_ai_responses_agent ON ai_responses_log(ai_agent);
CREATE INDEX IF NOT EXISTS idx_ai_responses_created_at ON ai_responses_log(created_at);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã meetings
CREATE INDEX IF NOT EXISTS idx_meetings_lead_id ON meetings(lead_id);
CREATE INDEX IF NOT EXISTS idx_meetings_time ON meetings(meeting_time);
CREATE INDEX IF NOT EXISTS idx_meetings_status ON meetings(status);

-- ===============================================
-- –¢–†–ò–ì–ì–ï–†–´
-- ===============================================

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

-- –¢—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
DROP TRIGGER IF EXISTS update_leads_updated_at ON leads;
CREATE TRIGGER update_leads_updated_at 
    BEFORE UPDATE ON leads
    FOR EACH ROW 
    EXECUTE FUNCTION update_updated_at_column();

DROP TRIGGER IF EXISTS update_meetings_updated_at ON meetings;
CREATE TRIGGER update_meetings_updated_at 
    BEFORE UPDATE ON meetings
    FOR EACH ROW 
    EXECUTE FUNCTION update_updated_at_column();

-- ===============================================
-- –ü–†–ï–î–°–¢–ê–í–õ–ï–ù–ò–Ø (VIEWS)
-- ===============================================

-- –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ª–∏–¥–æ–≤
CREATE OR REPLACE VIEW lead_analytics AS
SELECT 
    DATE(created_at) as date,
    COUNT(*) as total_leads,
    COUNT(CASE WHEN classification_status = 'complete' THEN 1 END) as classified_leads,
    COUNT(CASE WHEN status = 'in_sales' THEN 1 END) as in_sales_leads,
    COUNT(CASE WHEN meeting_scheduled = true THEN 1 END) as meetings_scheduled,
    COUNT(CASE WHEN status = 'closed' THEN 1 END) as closed_deals,
    ROUND(
        COUNT(CASE WHEN meeting_scheduled = true THEN 1 END)::numeric / 
        NULLIF(COUNT(CASE WHEN classification_status = 'complete' THEN 1 END), 0) * 100, 
        2
    ) as conversion_to_meeting_percent
FROM leads 
GROUP BY DATE(created_at)
ORDER BY date DESC;

-- –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —á–∞—Ç–æ–≤
CREATE OR REPLACE VIEW chat_statistics AS
SELECT 
    l.id as lead_id,
    l.name,
    l.phone,
    l.status,
    COUNT(ch.id) as total_messages,
    COUNT(CASE WHEN ch.direction = 'incoming' THEN 1 END) as incoming_messages,
    COUNT(CASE WHEN ch.direction = 'outgoing' THEN 1 END) as outgoing_messages,
    MIN(ch.created_at) as first_message_time,
    MAX(ch.created_at) as last_message_time,
    EXTRACT(EPOCH FROM (MAX(ch.created_at) - MIN(ch.created_at)))/3600 as conversation_duration_hours
FROM leads l
LEFT JOIN chat_history ch ON l.id = ch.lead_id
GROUP BY l.id, l.name, l.phone, l.status;

-- –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂
CREATE OR REPLACE VIEW sales_funnel AS
SELECT 
    '–í—Å–µ–≥–æ –ª–∏–¥–æ–≤' as stage,
    COUNT(*) as count,
    100.0 as percentage,
    1 as stage_order
FROM leads WHERE created_at >= CURRENT_DATE - INTERVAL '30 days'

UNION ALL

SELECT 
    '–ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã' as stage,
    COUNT(*) as count,
    ROUND(COUNT(*)::numeric / (SELECT COUNT(*) FROM leads WHERE created_at >= CURRENT_DATE - INTERVAL '30 days') * 100, 2) as percentage,
    2 as stage_order
FROM leads 
WHERE classification_status = 'complete' 
  AND created_at >= CURRENT_DATE - INTERVAL '30 days'

UNION ALL

SELECT 
    '–í –ø—Ä–æ–¥–∞–∂–∞—Ö' as stage,
    COUNT(*) as count,
    ROUND(COUNT(*)::numeric / (SELECT COUNT(*) FROM leads WHERE created_at >= CURRENT_DATE - INTERVAL '30 days') * 100, 2) as percentage,
    3 as stage_order
FROM leads 
WHERE status = 'in_sales' 
  AND created_at >= CURRENT_DATE - INTERVAL '30 days'

UNION ALL

SELECT 
    '–í—Å—Ç—Ä–µ—á–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã' as stage,
    COUNT(*) as count,
    ROUND(COUNT(*)::numeric / (SELECT COUNT(*) FROM leads WHERE created_at >= CURRENT_DATE - INTERVAL '30 days') * 100, 2) as percentage,
    4 as stage_order
FROM leads 
WHERE meeting_scheduled = true 
  AND created_at >= CURRENT_DATE - INTERVAL '30 days'

UNION ALL

SELECT 
    '–°–¥–µ–ª–∫–∏ –∑–∞–∫—Ä—ã—Ç—ã' as stage,
    COUNT(*) as count,
    ROUND(COUNT(*)::numeric / (SELECT COUNT(*) FROM leads WHERE created_at >= CURRENT_DATE - INTERVAL '30 days') * 100, 2) as percentage,
    5 as stage_order
FROM leads 
WHERE status = 'closed' 
  AND created_at >= CURRENT_DATE - INTERVAL '30 days'

ORDER BY stage_order;

-- ===============================================
-- –ù–ê–ß–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï
-- ===============================================

-- –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
INSERT INTO system_settings (setting_key, setting_value, description) VALUES
('whatsapp_welcome_template', '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}! üëã\n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–Ω–Ω–∞, —è –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –í–∏–∂—É, —á—Ç–æ –≤—ã –æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ.\n\n–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å –∫–∞–∫–æ–π –∑–∞–¥–∞—á–µ–π –∫ –Ω–∞–º –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å? –ö–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ–ª—É—á–∏—Ç—å?', '–®–∞–±–ª–æ–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è'),
('business_hours_start', '09:00', '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è'),
('business_hours_end', '18:00', '–ö–æ–Ω–µ—Ü —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è'),
('meeting_duration_minutes', '60', '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Å—Ç—Ä–µ—á–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é'),
('max_classification_attempts', '5', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏'),
('ai_classifier_prompt', '–¢—ã AI-–∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –∫–ª–∏–µ–Ω—Ç–æ–≤. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ —á–µ—Ä–µ–∑ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å: 1. –†–∞–∑–º–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞ 2. –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–π –±—é–¥–∂–µ—Ç –ø—Ä–æ–µ–∫—Ç–∞ 3. –ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ 4. –°—Ä–æ—á–Ω–æ—Å—Ç—å —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏. –í–∞–∂–Ω–æ: –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π –∞–Ω–∫–µ—Ç—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã. –í–µ–¥–∏ –∂–∏–≤–æ–µ –æ–±—â–µ–Ω–∏–µ, –Ω–æ –º—è–≥–∫–æ –Ω–∞–ø—Ä–∞–≤–ª—è–π —Ä–∞–∑–≥–æ–≤–æ—Ä –∫ –ø–æ–ª—É—á–µ–Ω–∏—é –Ω—É–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.', '–ü—Ä–æ–º–ø—Ç –¥–ª—è AI-–∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞'),
('ai_sales_prompt', '–¢—ã AI-–ø—Ä–æ–¥–∞–≤–µ—Ü. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –≤–µ—Å—Ç–∏ –ø—Ä–æ–¥–∞–∂–∏ –∏ –Ω–∞–∑–Ω–∞—á–∞—Ç—å –≤—Å—Ç—Ä–µ—á–∏. –£ —Ç–µ–±—è –µ—Å—Ç—å –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞. –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞: 1. –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ —Ä–µ—à–µ–Ω–∏–π –ø–æ–¥ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞ 2. –†–∞–±–æ—Ç–µ —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏ 3. –ó–∞–∫—Ä—ã—Ç–∏–∏ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É. –ë—É–¥—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º, –Ω–æ —Ç–∞–∫—Ç–∏—á–Ω—ã–º.', '–ü—Ä–æ–º–ø—Ç –¥–ª—è AI-–ø—Ä–æ–¥–∞–≤—Ü–∞')
ON CONFLICT (setting_key) DO NOTHING;

-- ===============================================
-- –ü–û–õ–ï–ó–ù–´–ï –§–£–ù–ö–¶–ò–ò
-- ===============================================

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—Å—Ç—Ä–µ—á–∏
CREATE OR REPLACE FUNCTION get_next_available_slot(
    start_date DATE DEFAULT CURRENT_DATE,
    duration_minutes INTEGER DEFAULT 60
) RETURNS TIMESTAMP AS $$
DECLARE
    business_start TIME := '09:00';
    business_end TIME := '18:00';
    current_slot TIMESTAMP;
    slot_end TIMESTAMP;
BEGIN
    -- –ù–∞—á–∏–Ω–∞–µ–º —Å –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è –µ—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –ø–æ–∑–¥–Ω–æ
    IF EXTRACT(HOUR FROM CURRENT_TIME) >= 18 THEN
        start_date := start_date + INTERVAL '1 day';
    END IF;
    
    -- –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—ã—Ö–æ–¥–Ω—ã–µ
    WHILE EXTRACT(DOW FROM start_date) IN (0, 6) LOOP
        start_date := start_date + INTERVAL '1 day';
    END LOOP;
    
    -- –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —Å–ª–æ—Ç
    current_slot := start_date + business_start;
    
    WHILE TRUE LOOP
        slot_end := current_slot + (duration_minutes || ' minutes')::INTERVAL;
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ª–æ—Ç –≤ —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–∞—Ö
        IF EXTRACT(HOUR FROM slot_end::TIME) <= 18 THEN
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–ª–æ—Ç–∞
            IF NOT EXISTS(
                SELECT 1 FROM meetings 
                WHERE status = 'scheduled'
                AND meeting_time < slot_end
                AND meeting_time + (duration_minutes || ' minutes')::INTERVAL > current_slot
            ) THEN
                RETURN current_slot;
            END IF;
        ELSE
            -- –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å
            start_date := start_date + INTERVAL '1 day';
            WHILE EXTRACT(DOW FROM start_date) IN (0, 6) LOOP
                start_date := start_date + INTERVAL '1 day';
            END LOOP;
            current_slot := start_date + business_start;
            CONTINUE;
        END IF;
        
        -- –°–ª–µ–¥—É—é—â–∏–π —Å–ª–æ—Ç —á–µ—Ä–µ–∑ —á–∞—Å
        current_slot := current_slot + INTERVAL '1 hour';
    END LOOP;
END;
$$ LANGUAGE plpgsql;