// api/src/whatsapp/humanBehavior.js

class HumanBehaviorSimulator {
 constructor() {
   this.delays = {
     beforeTyping: { min: 2000, max: 5000 }, // 2-5 —Å–µ–∫ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–µ—á–∞—Ç–∏
     afterTyping: { min: 500, max: 1500 }, // 0.5-1.5 —Å–µ–∫ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
     viewMessage: { min: 1000, max: 3000 }, // 1-3 —Å–µ–∫ –ø–µ—Ä–µ–¥ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º
     typingPause: { min: 2000, max: 5000 } // 2-5 —Å–µ–∫ —Å–ª—É—á–∞–π–Ω—ã–µ –ø–∞—É–∑—ã –ø—Ä–∏ –ø–µ—á–∞—Ç–∏
   };
   
   // –ü—Ä–æ—Å—Ç—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏
   this.readingSpeed = 250; // —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏
   this.typingSpeed = 4; // —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É –ø—Ä–∏ –ø–µ—á–∞—Ç–∏
 }
 
 // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
 random(min, max) {
   return Math.floor(Math.random() * (max - min + 1)) + min;
 }
 
 // –ü—Ä–æ—Å—Ç–æ–π —Ä–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è –ø–æ –¥–ª–∏–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏—è
 calculateReadingTime(text) {
   if (!text) return 0;
   
   const chars = text.length;
   // –ë–∞–∑–æ–≤–æ–µ –≤—Ä–µ–º—è: —Å–∏–º–≤–æ–ª—ã / —Å–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è (–≤ –º—Å)
   const baseTime = (chars / this.readingSpeed) * 1000;
   
   // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å ¬±30%
   const variance = baseTime * 0.3;
   const readingTime = baseTime + this.random(-variance, variance);
   
   // –ú–∏–Ω–∏–º—É–º 300–º—Å, –º–∞–∫—Å–∏–º—É–º 5 —Å–µ–∫—É–Ω–¥
   return Math.max(300, Math.min(readingTime, 5000));
 }
 
 // –ü—Ä–æ—Å—Ç–æ–π —Ä–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –ø–µ—á–∞—Ç–∏ –ø–æ –¥–ª–∏–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏—è
 calculateTypingTime(text) {
   const chars = text.length;
   // –ë–∞–∑–æ–≤–æ–µ –≤—Ä–µ–º—è: —Å–∏–º–≤–æ–ª—ã / —Å–∫–æ—Ä–æ—Å—Ç—å –ø–µ—á–∞—Ç–∏ (–≤ –º—Å)
   const baseTime = (chars / this.typingSpeed) * 1000;
   
   // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å ¬±25%
   const variance = baseTime * 0.25;
   const typingTime = baseTime + this.random(-variance, variance);
   
   // –¢–æ–ª—å–∫–æ –º–∏–Ω–∏–º—É–º 1 —Å–µ–∫—É–Ω–¥–∞, –±–µ–∑ –º–∞–∫—Å–∏–º—É–º–∞
   return Math.max(1000, typingTime);
 }
 
 // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ—á—Ç–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º –¥–ª–∏–Ω—ã
 async simulateMessageReading(waId, sendSeenCallback, incomingMessage = '') {
   // –ë–∞–∑–æ–≤–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —á—Ç–µ–Ω–∏—è
   const viewDelay = this.random(this.delays.viewMessage.min, this.delays.viewMessage.max);
   
   // –í—Ä–µ–º—è –Ω–∞ —á—Ç–µ–Ω–∏–µ —Å–∞–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
   const readingTime = this.calculateReadingTime(incomingMessage);
   
   const totalDelay = viewDelay + readingTime;
   
   console.log(`‚è±Ô∏è –ó–∞–¥–µ—Ä–∂–∫–∞: ${viewDelay}–º—Å + —á—Ç–µ–Ω–∏–µ ${incomingMessage.length} —Å–∏–º–≤–æ–ª–æ–≤: ${Math.round(readingTime)}–º—Å = ${Math.round(totalDelay)}–º—Å`);
   
   await new Promise(resolve => setTimeout(resolve, totalDelay));
   
   try {
     await sendSeenCallback();
     console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–µ');
   } catch (error) {
     console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–º–µ—Ç–∫–µ –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–µ:', error);
     throw error;
   }
 }
 
 // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º –¥–ª–∏–Ω—ã
 async simulateMessageSending(outgoingMessage, callbacks) {
   console.log('üé≠ –ù–∞—á–∏–Ω–∞–µ–º –∏–º–∏—Ç–∞—Ü–∏—é —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è...');
   
   // 1. –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–µ—á–∞—Ç–∏
   const thinkingTime = this.random(this.delays.beforeTyping.min, this.delays.beforeTyping.max);
   console.log(`  üí≠ –û–±–¥—É–º—ã–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ (${Math.round(thinkingTime/1000)}—Å)`);
   await new Promise(resolve => setTimeout(resolve, thinkingTime));
   
   // 2. –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—á–∞—Ç—å
   console.log('  ‚å®Ô∏è –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—á–∞—Ç–∞—Ç—å');
   await callbacks.sendTyping();
   
   // 3. –í—Ä–µ–º—è –ø–µ—á–∞—Ç–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–ª–∏–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è
   const typingTime = this.calculateTypingTime(outgoingMessage);
   console.log(`  ‚å®Ô∏è –ü–µ—á–∞—Ç–∞–µ–º ${outgoingMessage.length} —Å–∏–º–≤–æ–ª–æ–≤ (${Math.round(typingTime/1000)}—Å)`);
   
   // –†–∞–∑–±–∏–≤–∞–µ–º –≤—Ä–µ–º—è –ø–µ—á–∞—Ç–∏ –Ω–∞ —á–∞—Å—Ç–∏ —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ –ø–∞—É–∑–∞–º–∏
   const segments = Math.floor(typingTime / 15000); // –ü–∞—É–∑–∞ –ø—Ä–∏–º–µ—Ä–Ω–æ –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫
   if (segments > 0) {
     const segmentTime = typingTime / (segments + 1);
     
     for (let i = 0; i <= segments; i++) {
       await new Promise(resolve => setTimeout(resolve, segmentTime));
       
       // –°–ª—É—á–∞–π–Ω–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å–µ–≥–º–µ–Ω—Ç–∞–º–∏ (–∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ)
       if (i < segments) {
         const pauseTime = this.random(this.delays.typingPause.min, this.delays.typingPause.max);
         console.log(`  ‚è∏Ô∏è –ü–∞—É–∑–∞ –ø—Ä–∏ –ø–µ—á–∞—Ç–∏ (${Math.round(pauseTime/1000)}—Å)`);
         await new Promise(resolve => setTimeout(resolve, pauseTime));
         
         // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏ –ø–æ—Å–ª–µ –ø–∞—É–∑—ã
         await callbacks.sendTyping();
       }
     }
   } else {
     // –î–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π - –±–µ–∑ –ø–∞—É–∑
     await new Promise(resolve => setTimeout(resolve, typingTime));
   }
   
   // 4. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
   const finalDelay = this.random(this.delays.afterTyping.min, this.delays.afterTyping.max);
   console.log(`  üìñ –ü–µ—Ä–µ—á–∏—Ç—ã–≤–∞–Ω–∏–µ (${Math.round(finalDelay/1000)}—Å)`);
   await new Promise(resolve => setTimeout(resolve, finalDelay));
   
   // 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
   console.log('  üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ');
   const sentMessage = await callbacks.sendMessage();
   
   return sentMessage;
 }
}

module.exports = HumanBehaviorSimulator;