{
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "amocrm-webhook",
        "options": {}
      },
      "id": "deccdf74-7247-49cd-acc4-73f0e1fc9098",
      "name": "AmoCRM Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1580,
        -300
      ],
      "webhookId": "amocrm-webhook-12345"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "leads",
          "mode": "list",
          "cachedResultName": "leads"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $('extract lead').item.json.name }}",
            "phone": "={{ $json.custom_fields_values[0].values[0].value.replaceAll(('+'),'') }}",
            "id": "={{ $('extract lead').item.json.id }}",
            "amocrm_id": "={{ $('extract lead').item.json.id }}"
          },
          "matchingColumns": [
            "id",
            "amocrm_id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "amocrm_id",
              "displayName": "amocrm_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "wa_id",
              "displayName": "wa_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "source",
              "displayName": "source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "budget",
              "displayName": "budget",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "product_interest",
              "displayName": "product_interest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "notes",
              "displayName": "notes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "ai_classification",
              "displayName": "ai_classification",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "ai_score",
              "displayName": "ai_score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "classification_stage",
              "displayName": "classification_stage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "pipeline_id",
              "displayName": "pipeline_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "stage_id",
              "displayName": "stage_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "responsible_user_id",
              "displayName": "responsible_user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "a748abc5-b306-4eca-bf44-ecf075d57ba5",
      "name": "Save Lead to PostgreSQL",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        -180,
        -400
      ],
      "credentials": {
        "postgres": {
          "id": "fnp0aoTITqNjEjvW",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api:3000/whatsapp/welcome",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "wa_id",
              "value": "={{ $json.phone }}"
            },
            {
              "name": "message",
              "value": "=–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {{$json.name}}! üëã\n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–Ω–Ω–∞, —è –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –í–∏–∂—É, —á—Ç–æ –≤—ã –æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ.\n\n–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å –∫–∞–∫–æ–π –∑–∞–¥–∞—á–µ–π –∫ –Ω–∞–º –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å? –ö–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ–ª—É—á–∏—Ç—å?"
            },
            {
              "name": "=id",
              "value": "={{ $json.lead_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8b10cf77-9873-4d21-a99e-13576df0ed62",
      "name": "Send Welcome WhatsApp",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -260,
        -200
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "whatsapp-userbot-webhook",
        "options": {}
      },
      "id": "bfe5d56e-c9a5-40dc-b6e6-8a55ca8d1e02",
      "name": "WhatsApp Userbot Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1580,
        160
      ],
      "webhookId": "whatsapp-userbot-12345"
    },
    {
      "parameters": {
        "jsCode": "// Extract message data from userbot webhook\nconst data = $input.first().json.body;\n\nreturn {\n  phone: data.wa_phone || '',\n  message_text: data.message || '',\n  message_type: data.message_type || 'text',\n  contact_name: data.contact_name || '',\n  timestamp: data.timestamp || new Date().toISOString(),\n  message_id: data.message_id || Date.now().toString(),\n  chat_id: data.wa_id || '',\n  is_group: false, // –í—Å–µ–≥–¥–∞ false, —Ç–∞–∫ –∫–∞–∫ –≤ —Å–µ—Ä–≤–∏—Å–µ –º—ã —Ñ–∏–ª—å—Ç—Ä—É–µ–º –≥—Ä—É–ø–ø–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n  has_media: data.has_media || false,\n  lead_id: data.lead_id || null,\n  direction: data.direction || 'incoming'\n};"
      },
      "id": "0522ab03-c97c-4bcf-8cf5-9672f42b33ba",
      "name": "Extract WhatsApp Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1360,
        160
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "leads",
          "mode": "list",
          "cachedResultName": "leads"
        },
        "where": {
          "values": [
            {
              "column": "phone",
              "value": "={{ $json.phone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3e350ace-8268-473a-ad99-1a2946106ecf",
      "name": "Find Lead in Database",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        -1140,
        160
      ],
      "credentials": {
        "postgres": {
          "id": "fnp0aoTITqNjEjvW",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:3000/api/send-message",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Extract WhatsApp Data').first().json.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.choices[0].message.content }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2cc0f773-ca61-48ca-8b80-bae2193d1f74",
      "name": "Send AI Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1580,
        620
      ]
    },
    {
      "parameters": {
        "jsCode": "// Detect meeting request keywords\nconst messageText = $('Extract WhatsApp Data').first().json.message_text.toLowerCase();\nconst aiResponse = $json.choices[0].message.content.toLowerCase();\n\nconst meetingKeywords = [\n  '–≤—Å—Ç—Ä–µ—á–∞', '–≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è', '—Å–æ–∑–≤–æ–Ω', '–∑–≤–æ–Ω–æ–∫', \n  '–¥–µ–º–æ', '–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è', '–¥–∞', '—Å–æ–≥–ª–∞—Å–µ–Ω', \n  '–ø–æ–¥—Ö–æ–¥–∏—Ç', '–¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å', '–∑–∞–ø–∏—Å–∞—Ç—å'\n];\n\nconst needsMeeting = meetingKeywords.some(keyword => \n  messageText.includes(keyword) || aiResponse.includes(keyword)\n);\n\nreturn {\n  needs_meeting: needsMeeting,\n  client_message: messageText,\n  ai_response: aiResponse\n};"
      },
      "id": "045c73e2-3a2f-470c-b2f7-d8513b74efe2",
      "name": "Detect Meeting Request",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1360,
        620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.needs_meeting }}",
              "value2": true,
              "operation": "equal"
            }
          ]
        },
        "options": {}
      },
      "id": "6c132f4e-ddf9-4a9a-a135-91cb89bd09e4",
      "name": "Check Meeting Needed",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1140,
        620
      ]
    },
    {
      "parameters": {
        "jsCode": "// Calculate next available meeting slot\nconst now = new Date();\nlet nextSlot = new Date(now);\n\n// If it's after 6 PM, schedule for next day\nif (now.getHours() >= 18) {\n  nextSlot.setDate(nextSlot.getDate() + 1);\n}\n\n// Set to 10 AM\nnextSlot.setHours(10, 0, 0, 0);\n\n// Skip weekends\nwhile (nextSlot.getDay() === 0 || nextSlot.getDay() === 6) {\n  nextSlot.setDate(nextSlot.getDate() + 1);\n}\n\nconst endTime = new Date(nextSlot.getTime() + 60 * 60 * 1000);\n\nreturn {\n  start_time: nextSlot.toISOString(),\n  end_time: endTime.toISOString(),\n  formatted_time: nextSlot.toLocaleString('ru-RU', {\n    weekday: 'long',\n    day: 'numeric',\n    month: 'long',\n    hour: '2-digit',\n    minute: '2-digit'\n  })\n};"
      },
      "id": "6b5191e0-e10d-43d1-ac0e-4bdfe8c258e7",
      "name": "Calculate Meeting Time",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -920,
        620
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.googleapis.com/calendar/v3/calendars/primary/events",
        "authentication": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "summary",
              "value": "={{ '–í—Å—Ç—Ä–µ—á–∞ —Å –∫–ª–∏–µ–Ω—Ç–æ–º - ' + $('Find Lead in Database').first().json.name }}"
            },
            {
              "name": "description",
              "value": "={{ '–í—Å—Ç—Ä–µ—á–∞ —Å –ª–∏–¥–æ–º\\n–¢–µ–ª–µ—Ñ–æ–Ω: ' + $('Extract WhatsApp Data').first().json.phone }}"
            },
            {
              "name": "start",
              "value": "={{ { \"dateTime\": $('Calculate Meeting Time').first().json.start_time, \"timeZone\": \"Europe/Moscow\" } }}"
            },
            {
              "name": "end",
              "value": "={{ { \"dateTime\": $('Calculate Meeting Time').first().json.end_time, \"timeZone\": \"Europe/Moscow\" } }}"
            }
          ]
        },
        "options": {}
      },
      "id": "99405042-a770-4989-be60-22858c59b569",
      "name": "Create Calendar Event",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -700,
        620
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:3000/api/send-message",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Extract WhatsApp Data').first().json.phone }}"
            },
            {
              "name": "message",
              "value": "={{ `–û—Ç–ª–∏—á–Ω–æ! –í—Å—Ç—Ä–µ—á–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–∞ ${$('Calculate Meeting Time').first().json.formatted_time}.\\n\\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –ø–æ—á—Ç—É.\\n\\n–î–æ –≤—Å—Ç—Ä–µ—á–∏! üëã` }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d8f12089-3071-4ae0-b1ef-4724fff4b83c",
      "name": "Send Meeting Confirmation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -480,
        520
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list"
        },
        "table": {
          "__rl": true,
          "value": "leads",
          "mode": "list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "meeting_scheduled",
            "updated_at": "={{ new Date().toISOString() }}",
            "id": 0,
            "amocrm_id": 0,
            "ai_score": 0,
            "pipeline_id": 0,
            "stage_id": 0,
            "responsible_user_id": 0
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "amocrm_id",
              "displayName": "amocrm_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "wa_id",
              "displayName": "wa_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "source",
              "displayName": "source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "budget",
              "displayName": "budget",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "product_interest",
              "displayName": "product_interest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "notes",
              "displayName": "notes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ai_classification",
              "displayName": "ai_classification",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ai_score",
              "displayName": "ai_score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "classification_stage",
              "displayName": "classification_stage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pipeline_id",
              "displayName": "pipeline_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "stage_id",
              "displayName": "stage_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "responsible_user_id",
              "displayName": "responsible_user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "8295ad4c-25fd-4d8c-a72a-627e5694fca3",
      "name": "Update Lead Status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        -480,
        720
      ],
      "credentials": {
        "postgres": {
          "id": "fnp0aoTITqNjEjvW",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -80,
        400
      ],
      "id": "32d48b30-f40c-42ee-9aa2-b6fdd486e2ae",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "0AaWvDVkoyxlCCJv",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.messages }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=–¢—ã AI-–∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –∫–ª–∏–µ–Ω—Ç–æ–≤. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ —á–µ—Ä–µ–∑ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å: 1. –†–∞–∑–º–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞ 2. –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–π –±—é–¥–∂–µ—Ç –ø—Ä–æ–µ–∫—Ç–∞ 3. –ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ 4. –°—Ä–æ—á–Ω–æ—Å—Ç—å —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏. –í–∞–∂–Ω–æ: –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π –∞–Ω–∫–µ—Ç—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã. –í–µ–¥–∏ –∂–∏–≤–æ–µ –æ–±—â–µ–Ω–∏–µ, –Ω–æ –º—è–≥–∫–æ –Ω–∞–ø—Ä–∞–≤–ª—è–π —Ä–∞–∑–≥–æ–≤–æ—Ä –∫ –ø–æ–ª—É—á–µ–Ω–∏—é –Ω—É–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ö–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–µ–ª–∞–π –∫–∞–∫ –º–æ–∂–Ω–æ –∫–æ—Ä–æ—á–µ —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å —Å—É—Ç–∏, –Ω–µ –±—É–¥—å —Å–ª–∏—à–∫–æ–º —É—Å–ª—É–∂–ª–∏–≤, —Ç–≤–æ—è –∑–∞–¥–∞—á–∞ –ø–∏—Å–∞—Ç—å –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫\n–ü–æ–¥–≥–æ—Ç–æ–≤—å –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π\n### –ü—Ä–æ—Ñ–∏–ª–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤\n**–ò–î–ï–ê–õ–¨–ù–´–ô:**\n- –ú–∞–ª—ã–π/—Å—Ä–µ–¥–Ω–∏–π –±–∏–∑–Ω–µ—Å 10-100 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤\n- –ï—Å—Ç—å –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π –ø–æ—Ç–æ–∫\n- –ú–Ω–æ–≥–æ —Ä—É—Ç–∏–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π\n- –ë—é–¥–∂–µ—Ç \n- –ü–ª–∞–Ω—ã —Ä–æ—Å—Ç–∞\n\n**–ü–ï–†–°–ü–ï–ö–¢–ò–í–ù–´–ô:**\n- –ú–∏–∫—Ä–æ–±–∏–∑–Ω–µ—Å 5-10 —á–µ–ª–æ–≤–µ–∫\n- –°—Ç–∞–±–∏–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤\n- –ì–æ—Ç–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å\n- –ë—é–¥–∂–µ—Ç \n\n**–ù–ï –¶–ï–õ–ï–í–û–ô:**\n- –ú–µ–Ω–µ–µ 5 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤\n- –ë—é–¥–∂–µ—Ç \n- –†–∞–∑–æ–≤—ã–µ –∑–∞–¥–∞—á–∏\n- –ò—â–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ\n\n### –í–æ–ø—Ä–æ—Å—ã –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏\n**–ë–ò–ó–ù–ï–°:**\n- –°–∫–æ–ª—å–∫–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –º–µ—Å—è—Ü?\n- –ö–∞–∫ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –∑–∞—è–≤–∫–∏?\n- –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —Ç—Ä–∞—Ç–∏—Ç–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É?\n- –¢–µ—Ä—è–µ—Ç–µ –ª–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑-–∑–∞ –º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞?\n\n**–ü–†–û–¶–ï–°–°–´:**\n- –ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ –∑–∞—è–≤–∫–∏ —Å–µ–π—á–∞—Å?\n- –ö—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞–º?\n- –ï—Å—Ç—å –ª–∏ CRM/–±–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤?\n- –ß—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏?\n\n**–ü–õ–ê–ù–´:**\n- –•–æ—Ç–∏—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å –ø–æ—Ç–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤?\n- –ö–æ–≥–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é?\n- –ö–∞–∫–æ–π –±—é–¥–∂–µ—Ç —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ?\n\n### –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è\n**–ì–û–†–Ø–ß–ò–ô (HOT):**\n- –ê–∫—Ç–∏–≤–Ω–æ –∏—â–µ—Ç —Ä–µ—à–µ–Ω–∏–µ\n- –ï—Å—Ç—å —Å—Ä–æ–∫–∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è\n- –ë—é–¥–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω\n- –ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –±—ã—Å—Ç—Ä–æ\n\n**–¢–ï–ü–õ–´–ô (WARM):**\n- –ò–∑—É—á–∞–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã\n- –ü–æ–Ω–∏–º–∞–µ—Ç –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å\n- –ü–ª–∞–Ω–∏—Ä—É–µ—Ç –≤ 1-3 –º–µ—Å—è—Ü–∞\n- –ì–æ—Ç–æ–≤ –∫ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏\n\n**–•–û–õ–û–î–ù–´–ô (COLD):**\n- –ü—Ä–æ—Å—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç—Å—è\n- –ù–µ—Ç —Å—Ä–æ—á–Ω–æ—Å—Ç–∏\n- –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –±—é–¥–∂–µ—Ç\n- –¢—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≥—Ä–µ–≤–∞\n–ü—Ä–æ–¥–æ–ª–∂–∞–π –æ–±—â–µ–Ω–∏–µ –ø–æ–∫–∞ –∏ —É—Ç–æ—á–Ω—è–π –ø–æ–∫–∞ –Ω–µ —Å–º–æ–∂–µ—à—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –í–°–ï –ß–¢–û –ù–ï–û–ë–•–û–î–ò–ú–û –î–õ–Ø –ö–í–ê–õ–ò–§–ò–ö–ê–¶–ò–ò –í–µ—Ä–Ω–∏ JSON \n{\n  is_qualified: true/false,\n  qualification_rate: hot/warm/cold/null,\n  note: '',(–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω)\n  message: '—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ –µ—Å–ª–∏ –æ–Ω –Ω–µ –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ —Å–∞–º–º–∞—Ä–∏ –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–∞ –µ—Å–ª–∏ –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω'\n} "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -40,
        160
      ],
      "id": "86aeeca0-93a6-4928-8fad-7e2100182b1d",
      "name": "AI Agent qualify"
    },
    {
      "parameters": {
        "url": "=https://{{ $json.body[\"account[subdomain]\"] }}.amocrm.ru/api/v4/leads/{{ $json.body[\"leads[status][0][id]\"] }}?with=contacts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImY1ZmI4NGViZmUyNWJmMDcyYTk4ZGJhODY3MTQ0OWE0ZjUyN2ZjZDBlOWI1MmNiOWRlNTZhYWY4MmQxODhkOWFiNjc1YTljNDYwYTRiZGJjIn0.eyJhdWQiOiI4NWE2NDljOS1hODBlLTQ5MWYtOWI1Ny03MTIxM2RmYTllZGEiLCJqdGkiOiJmNWZiODRlYmZlMjViZjA3MmE5OGRiYTg2NzE0NDlhNGY1MjdmY2QwZTliNTJjYjlkZTU2YWFmODJkMTg4ZDlhYjY3NWE5YzQ2MGE0YmRiYyIsImlhdCI6MTc0OTE3MjkzMCwibmJmIjoxNzQ5MTcyOTMwLCJleHAiOjE3NTEwNjg4MDAsInN1YiI6IjEyNTkzNzk0IiwiZ3JhbnRfdHlwZSI6IiIsImFjY291bnRfaWQiOjMyNDcwNzUwLCJiYXNlX2RvbWFpbiI6ImFtb2NybS5ydSIsInZlcnNpb24iOjIsInNjb3BlcyI6WyJjcm0iLCJmaWxlcyIsImZpbGVzX2RlbGV0ZSIsIm5vdGlmaWNhdGlvbnMiLCJwdXNoX25vdGlmaWNhdGlvbnMiXSwiaGFzaF91dWlkIjoiYjFmNTFmZDEtMmJkMy00OGNlLWJiZTctNGQwOTYyYzUyNTBkIiwiYXBpX2RvbWFpbiI6ImFwaS1iLmFtb2NybS5ydSJ9.Of3HLuPF4UetP2WG0YdeVqK0_EhhrGSyjYS6UT4d7D7YF0oUgqeeAas5usa89x6uxVEDqFD0VzKV_58Mq5-0e6HZ2zaMNTe_IcMDmc_mdKTOmxEThnThtW0_9t8lF48LX3cMf4vR9FgD2LQBYky3Rd7uMlkrpOvhQOszc0I9XeunzpXr7L3OAVcHVkm9ZEmyyLv0iJpH0jTrKgSvEoLZlf1Sy0DgKdXU7kEsO28eHWv0easRRD3jxO-jGQ1OSI_yEsHpledrypQxIJejxFDIImSUp748I-ywEmZiFQ562mIcFXK32sPWtVLehGvAKgN02Joo-Td3I7LAtykWA4I9Aw"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1360,
        -300
      ],
      "id": "00afbba0-fa33-475e-97d4-9c8a6e5784fe",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "url": "=https://{{ $('AmoCRM Webhook').item.json.body['account[subdomain]'] }}.amocrm.ru/api/v4/contacts/{{ $json._embedded.contacts[0].id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImY1ZmI4NGViZmUyNWJmMDcyYTk4ZGJhODY3MTQ0OWE0ZjUyN2ZjZDBlOWI1MmNiOWRlNTZhYWY4MmQxODhkOWFiNjc1YTljNDYwYTRiZGJjIn0.eyJhdWQiOiI4NWE2NDljOS1hODBlLTQ5MWYtOWI1Ny03MTIxM2RmYTllZGEiLCJqdGkiOiJmNWZiODRlYmZlMjViZjA3MmE5OGRiYTg2NzE0NDlhNGY1MjdmY2QwZTliNTJjYjlkZTU2YWFmODJkMTg4ZDlhYjY3NWE5YzQ2MGE0YmRiYyIsImlhdCI6MTc0OTE3MjkzMCwibmJmIjoxNzQ5MTcyOTMwLCJleHAiOjE3NTEwNjg4MDAsInN1YiI6IjEyNTkzNzk0IiwiZ3JhbnRfdHlwZSI6IiIsImFjY291bnRfaWQiOjMyNDcwNzUwLCJiYXNlX2RvbWFpbiI6ImFtb2NybS5ydSIsInZlcnNpb24iOjIsInNjb3BlcyI6WyJjcm0iLCJmaWxlcyIsImZpbGVzX2RlbGV0ZSIsIm5vdGlmaWNhdGlvbnMiLCJwdXNoX25vdGlmaWNhdGlvbnMiXSwiaGFzaF91dWlkIjoiYjFmNTFmZDEtMmJkMy00OGNlLWJiZTctNGQwOTYyYzUyNTBkIiwiYXBpX2RvbWFpbiI6ImFwaS1iLmFtb2NybS5ydSJ9.Of3HLuPF4UetP2WG0YdeVqK0_EhhrGSyjYS6UT4d7D7YF0oUgqeeAas5usa89x6uxVEDqFD0VzKV_58Mq5-0e6HZ2zaMNTe_IcMDmc_mdKTOmxEThnThtW0_9t8lF48LX3cMf4vR9FgD2LQBYky3Rd7uMlkrpOvhQOszc0I9XeunzpXr7L3OAVcHVkm9ZEmyyLv0iJpH0jTrKgSvEoLZlf1Sy0DgKdXU7kEsO28eHWv0easRRD3jxO-jGQ1OSI_yEsHpledrypQxIJejxFDIImSUp748I-ywEmZiFQ562mIcFXK32sPWtVLehGvAKgN02Joo-Td3I7LAtykWA4I9Aw"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -920,
        -300
      ],
      "id": "3cc78a68-8ac9-4f81-a118-6ccc7586fd4b",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "jsCode": "return {json: JSON.parse($input.first().json.data)}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1140,
        -300
      ],
      "id": "9785517c-8b2c-4f0b-9d1b-3f49e66ad432",
      "name": "extract lead"
    },
    {
      "parameters": {
        "jsCode": "return JSON.parse($input.first().json.data)"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -700,
        -300
      ],
      "id": "355741f5-fcf8-412d-951a-346b758fecb3",
      "name": "extract contact"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "conversations",
          "mode": "list",
          "cachedResultName": "conversations"
        },
        "where": {
          "values": [
            {
              "column": "lead_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "created_at",
              "direction": "DESC"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -700,
        160
      ],
      "id": "e61662a1-a4bd-40fe-9b64-1c2e0c45cbb3",
      "name": "get messages",
      "credentials": {
        "postgres": {
          "id": "fnp0aoTITqNjEjvW",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Convert messages to AI format\nconst inputData = $input.first().json.data;\n\n// –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏\n\n// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è AI\nconst messages = inputData.map(msg => ({\n  role: msg.direction === 'incoming' ? 'user' : 'assistant',\n  content: msg.content\n}));\n\n\n// –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç\nreturn {\n  json: {\n    lead_id: inputData[0].lead_id,\n    phone: $('Find Lead in Database').first().json.phone,\n    messages: messages\n  }\n  \n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -260,
        160
      ],
      "id": "8287e0ed-b573-4bb4-b128-8f6e9099e1fb",
      "name": "Code"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -480,
        160
      ],
      "id": "677956d6-0ded-4fbe-8fe6-c268decab73b",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api:3000/whatsapp/welcome",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "wa_id",
              "value": "={{ $('Code').item.json.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.output.message }}"
            },
            {
              "name": "=id",
              "value": "={{ $('Code').item.json.lead_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7707b276-9292-46e8-9921-de5798e2d427",
      "name": "Send Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        776,
        160
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DO\n$$\nDECLARE\n    tabname text;\nBEGIN\n    FOR tabname IN\n        SELECT tablename\n        FROM pg_tables\n        WHERE schemaname = 'public'\n    LOOP\n        EXECUTE 'DELETE FROM public.' || quote_ident(tabname) || ' CASCADE';\n    END LOOP;\nEND;\n$$;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2060,
        -440
      ],
      "id": "322a4dfd-6d42-499d-b75a-783f03b4e72b",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "fnp0aoTITqNjEjvW",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"is_qualified\": true,\n  \"qualification_rate\": \"hot\",\n  \"note\": \"–ö–ª–∏–µ–Ω—Ç –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –ø–æ–∫—É–ø–∫–µ\",\n  \"message\": \"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú–æ–≥—É —É—Ç–æ—á–Ω–∏—Ç—å, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        140,
        380
      ],
      "id": "d85b21a7-7459-4ac3-8930-4c80a6ffff8d",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7e7cbb99-fb1b-4901-a424-e7f1805a43ea",
              "leftValue": "={{ $json.output.is_qualified }}",
              "rightValue": "={{ true }}",
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        340,
        180
      ],
      "id": "716bcac1-b32f-447f-9e2d-be78e635aadd",
      "name": "Qualified"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "66d66ae6-041b-4ca7-9e43-c9ea22cb4f1f",
              "leftValue": "={{ $json.ai_classification }}",
              "rightValue": "=''",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "367872ad-81e5-46b5-90cb-5cc9764315d1",
              "leftValue": "={{ $json.ai_score }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -920,
        160
      ],
      "id": "c0b89fc4-ccee-4b93-af25-6fa6ea8f1dc9",
      "name": "is_qualified"
    }
  ],
  "connections": {
    "AmoCRM Webhook": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp Userbot Webhook": {
      "main": [
        [
          {
            "node": "Extract WhatsApp Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract WhatsApp Data": {
      "main": [
        [
          {
            "node": "Find Lead in Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Lead in Database": {
      "main": [
        [
          {
            "node": "is_qualified",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send AI Response": {
      "main": [
        [
          {
            "node": "Detect Meeting Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Detect Meeting Request": {
      "main": [
        [
          {
            "node": "Check Meeting Needed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Meeting Needed": {
      "main": [
        [
          {
            "node": "Calculate Meeting Time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate Meeting Time": {
      "main": [
        [
          {
            "node": "Create Calendar Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Calendar Event": {
      "main": [
        [
          {
            "node": "Send Meeting Confirmation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update Lead Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent qualify",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent qualify": {
      "main": [
        [
          {
            "node": "Qualified",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "extract lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "extract contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract lead": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract contact": {
      "main": [
        [
          {
            "node": "Save Lead to PostgreSQL",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Welcome WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get messages": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent qualify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent qualify",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Qualified": {
      "main": [
        [],
        [
          {
            "node": "Send Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "is_qualified": {
      "main": [
        [],
        [
          {
            "node": "get messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "153a70e05f81f246b19609cee48a90b90798fd47a2d93526a26c89b4d31e1d09"
  }
}