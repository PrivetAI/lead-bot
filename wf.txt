{
  "name": "WhatsApp Lead Processing with AI",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "whatsapp-incoming",
        "options": {}
      },
      "id": "webhook-whatsapp",
      "name": "WhatsApp Incoming",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [220, 340],
      "webhookId": "whatsapp-incoming-webhook"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "amocrm-lead",
        "options": {}
      },
      "id": "webhook-amocrm",
      "name": "amoCRM New Lead",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [220, 140],
      "webhookId": "amocrm-new-lead-webhook"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *, (SELECT COUNT(*) FROM conversations WHERE lead_id = leads.id) as message_count FROM leads WHERE id = {{$json.lead_id}} OR wa_id = {{$json.wa_id}}",
        "options": {}
      },
      "id": "get-lead-info",
      "name": "Get Lead Info",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [420, 340],
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Postgres Lead DB"
        }
      }
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "create",
        "modelId": "gpt-4-turbo-preview",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "={{ $node['Get Prompts'].json.classifier_prompt }}"
            },
            {
              "role": "user", 
              "content": "Информация о лиде:\n{{JSON.stringify($node['Get Lead Info'].json[0])}}\n\nПоследнее сообщение клиента: {{$json.message}}\n\nИстория диалога:\n{{$node['Get Conversation'].json.map(m => `${m.direction}: ${m.content}`).join('\\n')}}"
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "responseFormat": {
            "type": "json_object"
          }
        }
      },
      "id": "ai-classifier",
      "name": "AI Classifier",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [820, 240],
      "credentials": {
        "openAiApi": {
          "id": "2",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "create",
        "modelId": "gpt-4-turbo-preview",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "={{ $node['Get Prompts'].json.sales_prompt }}"
            },
            {
              "role": "user",
              "content": "Профиль лида от классификатора:\n{{$node['AI Classifier'].json.message.content}}\n\nПоследнее сообщение: {{$node['WhatsApp Incoming'].json.message}}"
            }
          ]
        },
        "options": {
          "temperature": 0.8,
          "responseFormat": {
            "type": "json_object"
          }
        }
      },
      "id": "ai-sales",
      "name": "AI Sales Agent", 
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [820, 440],
      "credentials": {
        "openAiApi": {
          "id": "2",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery", 
        "query": "SELECT * FROM conversations WHERE lead_id = {{$node['Get Lead Info'].json[0].id}} ORDER BY created_at DESC LIMIT 20",
        "options": {}
      },
      "id": "get-conversation",
      "name": "Get Conversation",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [620, 340],
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Postgres Lead DB"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$node['Get Lead Info'].json[0].message_count}}",
              "operation": "larger",
              "value2": 5
            }
          ]
        }
      },
      "id": "check-stage",
      "name": "Check Stage",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [620, 240]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api:3000/webhook/n8n",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "lead_id",
              "value": "={{$node['Get Lead Info'].json[0].id}}"
            },
            {
              "name": "wa_id", 
              "value": "={{$json.wa_id}}"
            },
            {
              "name": "message",
              "value": "={{JSON.parse($node['AI Classifier'].json.message.content).message}}"
            },
            {
              "name": "action_type",
              "value": "classified"
            }
          ]
        },
        "options": {}
      },
      "id": "send-classifier-response",
      "name": "Send Classifier Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1020, 240]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api:3000/webhook/n8n",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "lead_id",
              "value": "={{$node['Get Lead Info'].json[0].id}}"
            },
            {
              "name": "wa_id",
              "value": "={{$node['WhatsApp Incoming'].json.wa_id}}" 
            },
            {
              "name": "message",
              "value": "={{JSON.parse($node['AI Sales Agent'].json.message.content).message}}"
            },
            {
              "name": "action_type",
              "value": "sales_response"
            },
            {
              "name": "calendar_data",
              "value": "={{JSON.parse($node['AI Sales Agent'].json.message.content).action.calendar_action}}"
            }
          ]
        },
        "options": {}
      },
      "id": "send-sales-response",
      "name": "Send Sales Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1020, 440]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE leads SET ai_classification = {{JSON.stringify(JSON.parse($node['AI Classifier'].json.message.content).classification)}}, ai_score = {{JSON.parse($node['AI Classifier'].json.message.content).classification.score}}, classification_stage = 'in_progress', updated_at = NOW() WHERE id = {{$node['Get Lead Info'].json[0].id}}",
        "options": {}
      },
      "id": "update-lead-classification",
      "name": "Update Lead Classification",
      "type": "n8n-nodes-base.postgres", 
      "typeVersion": 2.4,
      "position": [1220, 240],
      "credentials": {
        "postgres": {
          "id": "1", 
          "name": "Postgres Lead DB"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{JSON.parse($node['AI Sales Agent'].json.message.content).action.calendar_action.needed}}",
              "value2": true
            }
          ]
        }
      },
      "id": "check-calendar-needed",
      "name": "Calendar Needed?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1220, 440]
    },
    {
      "parameters": {
        "resource": "event",
        "operation": "create",
        "calendar": {
          "__rl": true,
          "value": "primary",
          "mode": "list"
        },
        "summary": "={{`Демо для ${$node['Get Lead Info'].json[0].name}`}}",
        "start": "={{JSON.parse($node['AI Sales Agent'].json.message.content).action.calendar_action.preferred_times[0]}}",
        "end": "={{DateTime.fromISO(JSON.parse($node['AI Sales Agent'].json.message.content).action.calendar_action.preferred_times[0]).plus({minutes: 45}).toISO()}}",
        "additionalFields": {
          "description": "={{`Контакт: ${$node['Get Lead Info'].json[0].name}\\nТелефон: ${$node['Get Lead Info'].json[0].phone}\\nКомпания: ${JSON.parse($node['Get Lead Info'].json[0].ai_classification).company_size} сотрудников\\nБоли: ${JSON.parse($node['Get Lead Info'].json[0].ai_classification).pain_points.join(', ')}\\nРекомендуемое решение: ${JSON.parse($node['AI Sales Agent'].json.message.content).action.recommended_solution}`}}"
        }
      },
      "id": "create-calendar-event",
      "name": "Create Calendar Event",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.1,
      "position": [1420, 540],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "3",
          "name": "Google Calendar"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      classifier_prompt: `Ты - опытный специалист по классификации лидов в B2B продажах AI-решений для автоматизации бизнеса...`, // Полный промпт из classifier-prompts.md\n      sales_prompt: `Ты - опытный менеджер по продажам AI-решений для автоматизации бизнеса...` // Полный промпт